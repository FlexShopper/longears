// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include "longears_types.h"
#include <Rcpp.h>

using namespace Rcpp;

// amqp_connect_
Rcpp::XPtr<AmqpConnection> amqp_connect_(std::string host, int port);
RcppExport SEXP _longears_amqp_connect_(SEXP hostSEXP, SEXP portSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type host(hostSEXP);
    Rcpp::traits::input_parameter< int >::type port(portSEXP);
    rcpp_result_gen = Rcpp::wrap(amqp_connect_(host, port));
    return rcpp_result_gen;
END_RCPP
}
// amqp_declare_queue_
void amqp_declare_queue_(Rcpp::XPtr<AmqpConnection> conn, std::string queue, bool quietly);
RcppExport SEXP _longears_amqp_declare_queue_(SEXP connSEXP, SEXP queueSEXP, SEXP quietlySEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::XPtr<AmqpConnection> >::type conn(connSEXP);
    Rcpp::traits::input_parameter< std::string >::type queue(queueSEXP);
    Rcpp::traits::input_parameter< bool >::type quietly(quietlySEXP);
    amqp_declare_queue_(conn, queue, quietly);
    return R_NilValue;
END_RCPP
}
// amqp_send_message_
void amqp_send_message_(Rcpp::XPtr<AmqpConnection> conn, std::string queue, std::string msg, std::string content_type);
RcppExport SEXP _longears_amqp_send_message_(SEXP connSEXP, SEXP queueSEXP, SEXP msgSEXP, SEXP content_typeSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::XPtr<AmqpConnection> >::type conn(connSEXP);
    Rcpp::traits::input_parameter< std::string >::type queue(queueSEXP);
    Rcpp::traits::input_parameter< std::string >::type msg(msgSEXP);
    Rcpp::traits::input_parameter< std::string >::type content_type(content_typeSEXP);
    amqp_send_message_(conn, queue, msg, content_type);
    return R_NilValue;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_longears_amqp_connect_", (DL_FUNC) &_longears_amqp_connect_, 2},
    {"_longears_amqp_declare_queue_", (DL_FUNC) &_longears_amqp_declare_queue_, 3},
    {"_longears_amqp_send_message_", (DL_FUNC) &_longears_amqp_send_message_, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_longears(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
